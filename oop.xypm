{checksums={["/usr/lib/oop.lua"]="\2­´\12\7ùœ+WiY¶åiK-°—é(¡MÍ\27\0211\20.®Eâ\23"},files={["/usr/lib/oop.lua"]="local oop = {\13\n};\13\n\13\nfunction oop.make(c)\13\n\9setmetatable(c, {\13\n\9\9__call = oop.new;\13\n\9});\13\nend\13\n\13\nfunction oop.inherit(c, base)\13\n\9setmetatable(c, {\13\n\9\9__index = base;\13\n\9\9__call = oop.new;\13\n\9});\13\nend\13\n\13\nfunction oop:new(...)\13\n\9local out = {};\13\n\9setmetatable(out, {\13\n\9\9__index = self;\13\n\9});\13\n\9\13\n\9if out.construct then\13\n\9\9out:construct(...);\13\n\9end\13\n\9\13\n\9return out;\13\nend\13\n\13\nfunction oop.instantiate(template, ...)\13\n\9return oop.new(template, ...);\13\nend\13\n\13\nfunction oop.exportFunctions(object)\13\n\9local meta = {\13\n\9\9obj = object;\13\n\9\9__index = function(t, k)\13\n\9\9\9m = getmetatable(t);\13\n\9\9\9if type(m.obj[k]) == \"function\" then\13\n\9\9\9\9return m.obj[k];\13\n\9\9\9else\13\n\9\9\9\9return nil;\13\n\9\9\9end\13\n\9\9end\13\n\9};\13\n\9return setmetatable({}, meta);\13\nend\13\n\13\nreturn {\13\n\9make = oop.make,\13\n\9inherit = oop.inherit,\13\n\9instantiate = oop.instantiate,\13\n\9exportFunctions = oop.exportFunctions\13\n};"},name="oop",links={},version="1.2"}